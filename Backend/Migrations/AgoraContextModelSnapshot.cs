// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AgoraContext))]
    partial class AgoraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Capacitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cupo")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("InscripcionAbierta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ponente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Capacitaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cupo = 30,
                            Detalle = "Aprende los conceptos básicos de programación.",
                            FechaHora = new DateTime(2025, 10, 12, 17, 23, 24, 281, DateTimeKind.Local).AddTicks(6797),
                            InscripcionAbierta = true,
                            IsDeleted = false,
                            Nombre = "Introducción a la Programación",
                            Ponente = "Carlos Gómez"
                        },
                        new
                        {
                            Id = 2,
                            Cupo = 25,
                            Detalle = "Crea webapps modernas con ASP.NET Core.",
                            FechaHora = new DateTime(2025, 10, 22, 17, 23, 24, 281, DateTimeKind.Local).AddTicks(6825),
                            InscripcionAbierta = true,
                            IsDeleted = false,
                            Nombre = "Desarrollo Web con ASP.NET Core",
                            Ponente = "Ana Martínez"
                        },
                        new
                        {
                            Id = 3,
                            Cupo = 20,
                            Detalle = "Aprende a manejar bases de datos con SQL.",
                            FechaHora = new DateTime(2025, 10, 17, 17, 23, 24, 281, DateTimeKind.Local).AddTicks(6828),
                            InscripcionAbierta = true,
                            IsDeleted = false,
                            Nombre = "Curso SQL",
                            Ponente = "Luis Pérez"
                        },
                        new
                        {
                            Id = 4,
                            Cupo = 30,
                            Detalle = "Domina JavaScript para desarrollo web.",
                            FechaHora = new DateTime(2025, 10, 27, 17, 23, 24, 281, DateTimeKind.Local).AddTicks(6831),
                            InscripcionAbierta = true,
                            IsDeleted = false,
                            Nombre = "Taller de JavaScript",
                            Ponente = "Marta López"
                        });
                });

            modelBuilder.Entity("Service.Models.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Acreditado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Pagado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoInscripcionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioCobroId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("TipoInscripcionId");

                    b.HasIndex("UsuarioCobroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Inscripciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acreditado = true,
                            CapacitacionId = 1,
                            Importe = 0m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Acreditado = true,
                            CapacitacionId = 1,
                            Importe = 12000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Acreditado = true,
                            CapacitacionId = 1,
                            Importe = 0m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 3,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            Acreditado = true,
                            CapacitacionId = 2,
                            Importe = 8000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 2,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 5,
                            Acreditado = true,
                            CapacitacionId = 2,
                            Importe = 12000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 1,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 6,
                            Acreditado = false,
                            CapacitacionId = 3,
                            Importe = 15000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            Acreditado = false,
                            CapacitacionId = 3,
                            Importe = 0m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 3,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 8,
                            Acreditado = false,
                            CapacitacionId = 3,
                            Importe = 15000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 1,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 9,
                            Acreditado = false,
                            CapacitacionId = 3,
                            Importe = 15000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 1,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 10,
                            Acreditado = false,
                            CapacitacionId = 3,
                            Importe = 10000m,
                            IsDeleted = false,
                            Pagado = false,
                            TipoInscripcionId = 2,
                            UsuarioId = 5
                        });
                });

            modelBuilder.Entity("Service.Models.TipoInscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoInscripciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Público en general"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Docentes"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Estudiantes"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Jubilados"
                        });
                });

            modelBuilder.Entity("Service.Models.TipoInscripcionCapacitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoInscripcionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapacitacionId");

                    b.HasIndex("TipoInscripcionId");

                    b.ToTable("TiposInscripcionesCapacitaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacitacionId = 1,
                            Costo = 10000m,
                            IsDeleted = false,
                            TipoInscripcionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CapacitacionId = 1,
                            Costo = 8000m,
                            IsDeleted = false,
                            TipoInscripcionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CapacitacionId = 2,
                            Costo = 5000m,
                            IsDeleted = false,
                            TipoInscripcionId = 3
                        },
                        new
                        {
                            Id = 4,
                            CapacitacionId = 2,
                            Costo = 3000m,
                            IsDeleted = false,
                            TipoInscripcionId = 4
                        });
                });

            modelBuilder.Entity("Service.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Ramírez",
                            DeleteDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dni = "43111222",
                            Email = "tadeo@isp20.edu.ar",
                            IsDeleted = false,
                            Nombre = "Tadeo",
                            TipoUsuario = 0
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Gómez",
                            DeleteDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dni = "40222333",
                            Email = "lucia.gomez@isp20.edu.ar",
                            IsDeleted = false,
                            Nombre = "Lucía",
                            TipoUsuario = 0
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Pérez",
                            DeleteDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dni = "39555111",
                            Email = "martin.perez@isp20.edu.ar",
                            IsDeleted = false,
                            Nombre = "Martín",
                            TipoUsuario = 0
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Sosa",
                            DeleteDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dni = "38888999",
                            Email = "carla.sosa@isp20.edu.ar",
                            IsDeleted = false,
                            Nombre = "Carla",
                            TipoUsuario = 0
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "López",
                            DeleteDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dni = "37777666",
                            Email = "diego.lopez@isp20.edu.ar",
                            IsDeleted = false,
                            Nombre = "Diego",
                            TipoUsuario = 1
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Admin",
                            DeleteDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dni = "00000000",
                            Email = "soporte@agora.isp20.edu.ar",
                            IsDeleted = false,
                            Nombre = "Soporte",
                            TipoUsuario = 2
                        });
                });

            modelBuilder.Entity("Service.Models.Inscripcion", b =>
                {
                    b.HasOne("Service.Models.Capacitacion", "Capacitacion")
                        .WithMany()
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.TipoInscripcion", "TipoInscripcion")
                        .WithMany()
                        .HasForeignKey("TipoInscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "UsuarioCobro")
                        .WithMany()
                        .HasForeignKey("UsuarioCobroId");

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("TipoInscripcion");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioCobro");
                });

            modelBuilder.Entity("Service.Models.TipoInscripcionCapacitacion", b =>
                {
                    b.HasOne("Service.Models.Capacitacion", "Capacitacion")
                        .WithMany()
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.TipoInscripcion", "TipoInscripcion")
                        .WithMany()
                        .HasForeignKey("TipoInscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("TipoInscripcion");
                });
#pragma warning restore 612, 618
        }
    }
}
